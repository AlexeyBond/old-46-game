[gd_scene load_steps=8 format=2]

[ext_resource path="res://additive-1.tres" type="Material" id=1]
[ext_resource path="res://proc/sketch_200418a/sprite.png" type="Texture" id=2]
[ext_resource path="res://sound/1_s.ogg" type="AudioStream" id=3]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D

export(int, 0, 2) var group = 0
export(float, 0.5, 2) var size = 1

var colors = [Color(1,0,0), Color(0,1,0), Color(0,0,1)];
var sounds = [
	[
		load('res://sound/1_s.ogg'),
		load('res://sound/2_s.ogg'),
		load('res://sound/3_s.ogg'),
	],
	[
		load('res://sound/1_s.ogg'),
		load('res://sound/2_s.ogg'),
		load('res://sound/3_s.ogg'),
	],
	[
		load('res://sound/1_s.ogg'),
		load('res://sound/2_s.ogg'),
		load('res://sound/3_s.ogg'),
	],
];

func randomize():
	group = ceil(rand_range(-0.99, 2))
	size = rand_range(0.5, 2)

onready var timer = get_node('../../Timer')

func _ready():
	# int sometimes is -0 ... WTF?
	timer.connect('tick' + str(abs(group)), self, 'tick')
	var group_sounds = sounds[group]
	group_sounds.shuffle()
	$AudioStreamPlayer.stream = group_sounds[0];
	$AudioStreamPlayer.stream.set_loop(false)
	$RigidBody2D/CPUParticles2D.modulate = colors[group]
	$RigidBody2D/CPUParticles2D.transform = Transform2D(0, Vector2(0,0)).scaled(Vector2(size,size) * 1.1)
	modulate = colors[group]
	$RigidBody2D.linear_damp = 0.01
	$RigidBody2D.linear_velocity = Vector2(0,rand_range(100, 300)).rotated(rand_range(0, 2.0*PI))
	$RigidBody2D/sprite.scale = Vector2(size, size)
	$RigidBody2D/CollisionShape2D.transform = $RigidBody2D/CollisionShape2D.transform.scaled(Vector2(size,size))
	

func _process(delta):
	pass

func get_position():
	return $RigidBody2D.get_global_transform().get_origin()

func activate0():
	$AudioStreamPlayer.play()
	$RigidBody2D/CPUParticles2D.emitting = true
	$RigidBody2D/CPUParticles2D.restart()

var links = []

func add_link(link):
	links.append(link)
	$RigidBody2D.linear_damp = 1

func remove_link(link):
	links.remove(links.find(link))
	$RigidBody2D.linear_damp = 0.1
	$RigidBody2D.linear_velocity = Vector2(0,rand_range(100, 300)).rotated(rand_range(0, 2.0*PI))

func get_link_to(ball):
	for link in links:
		if link.connects(ball):
			return link
	return null

func tick_activate_linked(tck):
	for link in links:
			var peer = link.other_for(self)
			peer.tick_activate(tck)

var last_tick = -1
var last_activated_tick = -2
var activate_linked_on_tick = -2

func activate():
	activate0()
	activate_linked_on_tick = last_tick + 1
	last_activated_tick = last_tick

func tick(tck):
	if activate_linked_on_tick == tck:
		tick_activate_linked(tck)

	last_tick = tck

func tick_activate(tck):
	last_tick = tck
	
	if last_activated_tick < (tck - 2):	
		activate()

"

[sub_resource type="PhysicsMaterial" id=2]
friction = 0.0
rough = true
bounce = 1.0
absorbent = true

[sub_resource type="CircleShape2D" id=3]
radius = 200.0

[sub_resource type="Gradient" id=4]
offsets = PoolRealArray( 0, 0.291829, 0.770428, 0.996109 )
colors = PoolColorArray( 0, 0, 0, 1, 0.742188, 0.742188, 0.742188, 1, 0.372559, 0.372559, 0.372559, 1, 0, 0, 0, 1 )

[node name="Node2D" type="Node2D"]
script = SubResource( 1 )

[node name="RigidBody2D" type="RigidBody2D" parent="."]
mass = 748.0
physics_material_override = SubResource( 2 )
gravity_scale = 0.0
linear_damp = 1.0
angular_damp = 128.0

[node name="CollisionShape2D" type="CollisionShape2D" parent="RigidBody2D"]
shape = SubResource( 3 )

[node name="sprite" type="Sprite" parent="RigidBody2D"]
material = ExtResource( 1 )
texture = ExtResource( 2 )

[node name="CPUParticles2D" type="CPUParticles2D" parent="RigidBody2D"]
material = ExtResource( 1 )
emitting = false
amount = 32
one_shot = true
explosiveness = 0.86
texture = ExtResource( 2 )
emission_shape = 1
emission_sphere_radius = 35.19
spread = 180.0
gravity = Vector2( 0, 0 )
initial_velocity = 1000.0
linear_accel = -500.0
scale_amount = 0.0
scale_amount_random = 0.2
color_ramp = SubResource( 4 )

[node name="AudioStreamPlayer" type="AudioStreamPlayer" parent="."]
pause_mode = 2
stream = ExtResource( 3 )
