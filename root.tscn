[gd_scene load_steps=4 format=2]

[ext_resource path="res://content-1.tscn" type="PackedScene" id=1]
[ext_resource path="res://postprocess-1.tres" type="Material" id=2]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D

# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"

func _init():
	randomize();

# Called when the node enters the scene tree for the first time.
func _ready():
	resize()
	get_tree().get_root().connect(\"size_changed\", self, \"resize\")

onready var viewer = get_node(\"ViewportContainer/Viewport/viewer\");
onready var viewport: Viewport = get_node(\"ViewportContainer/Viewport\");
onready var camera: Camera2D = get_node(\"ViewportContainer/Viewport/viewer/camera\");
onready var content = get_node(\"ViewportContainer/Viewport/content\");

var drag_key

func _input(event):
	if event.is_action('exit'):
		get_tree().quit();
	elif event.is_action_pressed(\"click\"):
		drag_key = content.start_drag(camera.get_global_mouse_position())
	elif event.is_action_released('click'):
		if drag_key:
			content.end_drag(drag_key, camera.get_global_mouse_position())
		else:
			content.on_click(camera.get_global_mouse_position())
		drag_key = null

var cur_position
var cur_zoom

func _process(delta):
	var rect: Rect2 = content.get_intrest_rect()
	var position = rect.position + rect.size * 0.5

	var zoom = max(
		rect.size.x / viewport.size.x,
		rect.size.y / viewport.size.y
	)
	zoom = max(zoom, 1.0)

	if not cur_position:
		cur_position = position
		cur_zoom = zoom
	else:
		var k = pow(0.9, 1/delta)
		cur_position = lerp(cur_position, position, k)
		cur_zoom = lerp(cur_zoom, zoom, k)
	
	viewport.set_global_canvas_transform(
		Transform2D(
			Vector2(1,0),
			Vector2(0,1),
			-cur_position + viewport.size * 0.5 * cur_zoom
		).scaled(Vector2.ONE / cur_zoom)
	)

func resize():
	var sz;
	#sz = get_viewport_rect().size
	sz = OS.get_window_size()
	print ('rs', sz)
	$ViewportContainer.set_end(sz)
	$ViewportContainer/Viewport.set_size(sz)
	$ColorRect.set_end(sz)
	
	
	
	"

[node name="Node2D" type="Node2D"]
script = SubResource( 1 )

[node name="ViewportContainer" type="ViewportContainer" parent="."]
margin_right = 1920.0
margin_bottom = 1080.0
size_flags_horizontal = 11
size_flags_vertical = 11
stretch = true

[node name="Viewport" type="Viewport" parent="ViewportContainer"]
size = Vector2( 1920, 1080 )
handle_input_locally = false
disable_3d = true
usage = 0
render_target_update_mode = 3

[node name="viewer" type="Node2D" parent="ViewportContainer/Viewport"]

[node name="camera" type="Camera2D" parent="ViewportContainer/Viewport/viewer"]
visible = false
limit_left = -50000
limit_top = -50000
limit_right = 1000000
limit_bottom = 1000000
smoothing_speed = 100.0
offset_h = 0.01
drag_margin_left = 0.07
drag_margin_top = 0.1
drag_margin_right = 0.09
drag_margin_bottom = 0.08
editor_draw_drag_margin = true

[node name="ColorRect" type="ColorRect" parent="ViewportContainer/Viewport/viewer"]
visible = false
margin_left = -100.0
margin_top = -100.0
margin_right = 100.0
margin_bottom = 100.0

[node name="content" parent="ViewportContainer/Viewport" instance=ExtResource( 1 )]

[node name="ColorRect" type="ColorRect" parent="."]
material = ExtResource( 2 )
anchor_right = 1.0
anchor_bottom = 1.0
margin_right = 1920.0
margin_bottom = 1080.0
